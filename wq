[1mdiff --git a/components/Song.js b/components/Song.js[m
[1mindex a4f7353..ee5fbaf 100644[m
[1m--- a/components/Song.js[m
[1m+++ b/components/Song.js[m
[36m@@ -10,7 +10,11 @@[m [mimport {[m
   currentSongIndexState,[m
   isPlayState,[m
 } from '@/atoms/songAtom';[m
[31m-import { playlistIdState, playlistState } from '@/atoms/playlistAtom';[m
[32m+[m[32mimport {[m
[32m+[m[32m  playlistIdState,[m
[32m+[m[32m  playlistState,[m
[32m+[m[32m  playingPlaylistState,[m
[32m+[m[32m} from '@/atoms/playlistAtom';[m
 // import icon[m
 import { PlayIcon, PauseIcon } from '@heroicons/react/24/solid';[m
 import Equaliser from './Equaliser';[m
[36m@@ -19,14 +23,15 @@[m [mfunction Song({ order, track }) {[m
   const spotifyApi = useSpotify();[m
   const song = track.track;[m
 [m
[31m-  const [playlist, setPlaylist] = useRecoilState(playlistState);[m
[31m-  const [isPlaying, setIsPlaying] = useRecoilState(isPlayState);[m
[32m+[m[32m   const [isPlaying, setIsPlaying] = useRecoilState(isPlayState);[m
   const [playlistId, setPlaylistId] = useRecoilState(playlistIdState);[m
   const [currentrackId, setCurrentTrackId] =[m
     useRecoilState(State);[m
   const [currentSongIndex, setCurrentSongIndex] = useRecoilState([m
     currentSongIndexState[m
   );[m
[32m+[m[32m  const [playingPlaylist, setplayingPlaylist] =[m
[32m+[m[32m    useRecoilState(playingPlaylistState);[m
   const [isShown, setIsShown] = useState(false);[m
 [m
   const activeStatus = useMemo(() => {[m
[36m@@ -38,6 +43,7 @@[m [mfunction Song({ order, track }) {[m
       if (data.body?.is_playing && song.id == currentrackId) {[m
         spotifyApi.pause();[m
         setIsPlaying(false);[m
[32m+[m[32m        setplayingPlaylist(null);[m
       } else {[m
         spotifyApi[m
           .play({[m
[36m@@ -49,6 +55,9 @@[m [mfunction Song({ order, track }) {[m
             setIsPlaying(true);[m
             setCurrentTrackId(song.id);[m
             setCurrentSongIndex(currentTrackIndex);[m
[32m+[m[32m            const playlist = data.body?.context.uri.split(':');[m
[32m+[m[32m            const playingId = playlist[playlist.length - 1];[m
[32m+[m[32m            setplayingPlaylist(playingId);[m
           })[m
           .catch((err) => console.error('Playback failed: ', err));[m
       }[m
